{"name":"metrics-spring","tagline":"Spring integration for Yammer's Metrics library","body":"#Metrics for Spring [![Build Status](https://secure.travis-ci.org/ryantenney/metrics-spring.png)](http://travis-ci.org/ryantenney/metrics-spring)\r\n=================================\r\n\r\n##About\r\n\r\nThe `metrics-spring` module integrates [Yammer Metrics](http://metrics.codahale.com/) with Spring AOP, complete with simple XML configuration.\r\n\r\nThis module does the following things:\r\n\r\n* Proxies beans which contain methods annotated with `@Timed`, `@Metered`, and `@ExceptionMetered`\r\n* Registers a `Gauge` for beans which have members annotated with `@Gauge`\r\n* Registers with the `HealthCheckRegistry` any beans which extend the class `HealthCheck`\r\n\r\n###Maven\r\n\r\n\t<dependency>\r\n\t\t<groupId>com.yammer.metrics</groupId>\r\n\t\t<artifactId>metrics-spring</artifactId>\r\n\t\t<version>2.1.3</version>\r\n\t</dependency>\r\n\r\nThis module was formerly contained in the [Yammer Metrics repository](https://github.com/codahale/metrics). Version 2.1.x will be the last version of this module available at these coordinates. This is the new official home of this project, and new coordinates will be available soon.\r\n\r\n###Basic Usage\r\n\r\nSpring Context XML:\r\n\r\n\t<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n\t\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\t\t   xmlns:metrics=\"http://www.yammer.com/schema/metrics\"\r\n\t\t   xsi:schemaLocation=\"\r\n\t\t\t\thttp://www.springframework.org/schema/beans\r\n\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans-3.1.xsd\r\n\t\t\t\thttp://www.yammer.com/schema/metrics\r\n\t\t\t\thttp://www.yammer.com/schema/metrics/metrics.xsd\">\r\n\t\r\n\t\t<metrics:annotation-driven />\r\n\t\r\n\t\t<!-- beans -->\r\n\t\r\n\t</beans>\r\n\r\nAlternate, XML-less config:\r\n\r\n\timport org.springframework.context.annotation.Configuration;\r\n\timport com.ryantenney.metrics.spring.config.annotation.EnableMetrics;\r\n\t\r\n\t@Configuration\r\n\t@EnableMetrics\r\n\tpublic class SpringConfiguringClass {\r\n\t\t// ...\r\n\t}\r\n\r\n###XML Config\r\n\r\nThe `<metrics:annotation-driven />` element is required, and has 5 optional arguments:\r\n\r\n* `metrics-registry` - the id of the `MetricsRegsitry` bean with which the generated metrics should be registered. If omitted, this defaults to registry provided by `Metrics.defaultRegistry()`.\r\n* `health-check-registry` - the id of the `HealthCheckRegsitry` bean with which to register any beans which extend the class `HealthCheck`. If omitted, this defaults to the registry provided by `HealthChecks.defaultRegistry()`.\r\n* `scope` - sets the scope for each of the metrics.\r\n* `proxy-target-class` - if set to true, always creates CGLIB proxies instead of defaulting to JDK proxies. This *may* be necessary if you use class-based autowiring.\r\n* `expose-proxy` - if set to true, the target can access the proxy which wraps it by calling `AopContext.currentProxy()`.\r\n\r\nThe elements `<metrics:metrics-registry />` and `<metrics:health-check-registry />` are present as a convenience for creating new registry beans.\r\n\r\nThe element `<metrics:jmx-reporter />` creates a JMX Reporter for the specified metrics registry. A JMX Reporter is automatically created for the default metrics registry.\r\n\r\n###A Note on the Limitations of Spring AOP\r\n\r\nDue to limitations of Spring AOP only public methods can be proxied, so `@Timed`, `@Metered`, and `@ExceptionMetered` have no effect on non-public methods. Additionally, calling an annotated method from within the same class will not go through the proxy.\r\n\r\n\tpublic class Foo {\r\n\t\t\r\n\t\t@Timed\r\n\t\tpublic void bar() { /* … */ }\r\n\t\t\r\n\t\tpublic void baz() {\r\n\t\t\tthis.bar(); // doesn't pass through the proxy\r\n\t\t\t\r\n\t\t\t// fix: reengineer\r\n\t\t\t// workaround: enable `expose-proxy` and change to:\r\n\t\t\t((Foo) AopContext.currentProxy()).bar(); // hideous, but it works\r\n\t\t}\r\n\t}\r\n\r\nAs `@Gauge` doesn’t involve a proxy, it is possible to use this annotation on private fields and methods.\r\n\r\n##License\r\n=========\r\n\r\nCopyright (c) 2012 Ryan Tenney, Martello Technologies\r\n\r\nPublished under Apache Software License 2.0, see LICENSE\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}